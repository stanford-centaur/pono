name: CI
on:
  push:
  workflow_dispatch:  # allow manual trigger

jobs:
  format-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Check format using clang-format
        run: |
          find . -type d -name "contrib" -prune -or -type f \( -name '*.h' -or -name '*.cpp' \) -print \
          | xargs clang-format --dry-run -Werror --style=file

  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        link_type: [dynamic, static]
        include:
          - os: ubuntu-latest
            extra_solver_flags: --with-msat
          - link_type: static
            config_opts: --static

    name: ${{ matrix.os }}-${{ matrix.link_type }}-build
    runs-on: ${{ matrix.os}}

    steps:
      - uses: actions/checkout@v2

      - name: Install Packages (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            cmake \
            ninja-build

      - name: Python Environment Setup
        run: |
          python3 -m venv ./.venv
          source .venv/bin/activate
          python3 -m pip install \
            Cython \
            meson \
            pyparsing \
            scikit-build

      - name: Download MathSAT
        if: runner.os != 'macOS'
        run: ./ci-scripts/setup-msat.sh --auto-yes

      - name: Setup Flex
        run: ./contrib/setup-flex.sh

      - name: Setup Bison
        run: ./contrib/setup-bison.sh

      - name: Setup Btor2Tools
        run: ./contrib/setup-btor2tools.sh

      - name: Setup Smt-Switch
        run: |
          source .venv/bin/activate
          ./contrib/setup-smt-switch.sh --python ${{ matrix.extra_solver_flags }}

      - name: Set up Python bindings for smt-switch
        run: |
          source .venv/bin/activate
          python3 -m pip install -e ./deps/smt-switch/build/python

      - name: Configure
        run: |
          source .venv/bin/activate
          ./configure.sh --debug --python ${{ matrix.extra_solver_flags }} ${{ matrix.config_opts }}

      - name: Build
        run: |
          cd build
          make -j

      - name: Test C++
        id: test-cpp
        continue-on-error: true
        run: |
          cd build
          make check

      - name: Upload failing test log
        if: steps.test-cpp.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.link_type }}-test-log-${{ github.run_id }}
          path: build/tests/Testing/Temporary/LastTest.log

      - name: Fail pipeline due to C++ test failure
        if: steps.test-cpp.outcome == 'failure'
        run: |
          echo "C++ tests failed. Inspect the artifact for details."
          exit 1

      - name: Install Python Bindings
        run: |
          source .venv/bin/activate
          python3 -m pip install ./build/python[test]

      - name: Test Python Bindings
        run: |
          source .venv/bin/activate
          pytest ./tests
